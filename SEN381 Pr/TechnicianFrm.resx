<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wBW6ceM/8eoouuY6ev8AAAAASUVORK5CYII=
</value>
  </data>
</root>